pipeline:
  name: test-flow
  identifier: testflow
  projectIdentifier: NgLabs
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: gitconnectordhruba
        repoName: flow
        build: <+input>
  stages:
    - stage:
        name: Build and Test
        identifier: Build_and_Test
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: install-opam-mac
                  identifier: installopammac
                  spec:
                    connectorRef: harnessdocker
                    image: flowtype/flow-ci:linux-x86_64
                    shell: Bash
                    command: |2-
                                  if ! [ -x "$(command -v opam)" ]; then
                                    TMP=${TMPDIR:-/tmp}
                                    curl -sL -o "$TMP/opam" "https://github.com/ocaml/opam/releases/download/2.0.10/opam-2.0.10-x86_64-macos"
                                    install -m 755 "$TMP/opam" "/usr/local/bin/opam"
                                    rm -f "$TMP/opam"
                                  fi
              - step:
                  type: Run
                  name: Create cache breaker
                  identifier: Create_cache_breaker
                  spec:
                    connectorRef: harnessdocker
                    image: flowtype/flow-ci:linux-x86_64
                    shell: Bash
                    command: .circleci/make_opam_cachebreaker.sh > .circleci/opamcachebreaker
              - step:
                  type: RestoreCacheGCS
                  name: restore-opam-cache
                  identifier: restoreopamcache
                  spec:
                    connectorRef: gcpdhruba
                    bucket: test-flow-cache
                    key: v1-opam-cache-{{ arch }}-{{ checksum ".circleci/opamcachebreaker" }}
                    archiveFormat: Tar
                  when:
                    stageStatus: All
                  failureStrategies: []
              - step:
                  type: Run
                  name: Init opam
                  identifier: Init_opam
                  spec:
                    connectorRef: harnessdocker
                    image: flowtype/flow-ci:linux-x86_64
                    shell: Bash
                    command: .circleci/opam_init.sh
                  description: build_js
                  when:
                    stageStatus: All
                  failureStrategies: []
              - step:
                  type: Run
                  name: Install deps from opam
                  identifier: Install_deps_from_opam
                  spec:
                    connectorRef: harnessdocker
                    image: flowtype/flow-ci:linux-x86_64
                    shell: Sh
                    command: |-
                      .circleci/opam_init.sh
                      make deps
                  when:
                    stageStatus: All
                  failureStrategies: []
          sharedPaths:
            - /flow
